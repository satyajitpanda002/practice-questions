// link - https://leetcode.com/problems/binary-tree-paths/submissions/

// approach - use backtracking

class Solution {
    void solve(TreeNode *root,vector<string>&ans,vector<int>&temp)
    {
        if(!root->left and !root->right)
        {
            string s="";
            for(int x:temp)
            {
                s+=to_string(x);
                s+="->";
            }
            s+=to_string(root->val);
            ans.push_back(s);
        }
        temp.push_back(root->val);
        if(root->left)
            solve(root->left,ans,temp);
        if(root->right)
            solve(root->right,ans,temp);
        temp.pop_back();
        
    }
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string>ans;
        if(!root)
            return ans;
        vector<int>temp;
        solve(root,ans,temp);
        return ans;
    }
};
