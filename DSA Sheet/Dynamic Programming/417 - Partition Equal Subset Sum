// link - https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1#


class Solution{
    int solve(int arr[],int n,int sum)
    {
        int dp[n+1][sum+1];
        for(int i=0;i<=sum;i++)
            dp[0][i]=0;
        for(int i=0;i<=n;i++)
            dp[i][0]=1;
    
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=sum;j++)
            {
                if(arr[i-1]<=j)
                    dp[i][j]=dp[i-1][j-arr[i-1]] || dp[i-1][j];
                else
                    dp[i][j]= dp[i-1][j];
            }
        }
        return dp[n][sum];
    }
public:
    int equalPartition(int N, int arr[])
    {
        // code herei
        int sum=accumulate(arr,arr+N,0);
        
        if(sum%2!=0)
            return 0;
        else
        {
            sum/=2;
            return solve(arr,N,sum);
        }
            
    }
};
