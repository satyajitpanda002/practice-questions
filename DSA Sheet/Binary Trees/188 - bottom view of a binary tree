// link - https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1
// approach - same as top view, but here we have to update the map every time we encounter the same column number



class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
        vector<int>ans;
        if(!root)
            return ans;
        queue<pair<Node *,int>>q;
        q.push(make_pair(root,0));
        int s=q.size();
        map<int,int>m;
        
        while(!q.empty())
        {
            for(int i=0;i<s;i++){
            pair<Node *,int>t=q.front();
            m[t.second]=t.first->data;
            if(t.first->left)
                q.push(make_pair(t.first->left,t.second-1));
            if(t.first->right)
                q.push(make_pair(t.first->right,t.second+1));
            q.pop();
            }
            s=q.size();
        }
        
        for(auto x:m)
            ans.push_back(x.second);
        
        return ans;
    }
};
