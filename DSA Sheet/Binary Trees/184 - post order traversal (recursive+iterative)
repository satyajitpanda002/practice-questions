// link - https://leetcode.com/problems/binary-tree-postorder-traversal/


// recursive

class Solution {
    void solve(TreeNode *root,vector<int>& ans)
    {
        if(root)
        {
            
            solve(root->left,ans);
            solve(root->right,ans);
            ans.push_back(root->val);
        }
    }
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int>ans;
        if(!root)
            return ans;
        solve(root,ans);
        return ans;         
    }
};




// iterative

class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int>ans;
        if(!root)
            return ans;
        stack<TreeNode *>st1,st2;
        st1.push(root);
        while(!st1.empty())
        {
            TreeNode *t=st1.top();
            st2.push(t);
            st1.pop();
            if(t->left)
                st1.push(t->left);
            if(t->right)
                st1.push(t->right);
        }
        while(!st2.empty())
        {
            ans.push_back(st2.top()->val);
            st2.pop();
        }
        return ans;
    }
};
