// link - https://practice.geeksforgeeks.org/problems/number-of-provinces/1


// approach - simple dfs/bfs traversal will work, just we need to keep track with a visited array, when encountered with a 
// unvisited node we have to incrase the counter value



class Solution {
    int ans;
    queue<int>q;
    
    void solve(vector<vector<int>>&adj,int V,int visited[])
    {
        while(!q.empty())
        {
            int temp=q.front();
            q.pop();
            for(int i=0;i<V;i++)
            {
                if(adj[temp-1][i]==1 and visited[i+1]==0)
                {
                    visited[i+1]=1;
                    q.push(i+1);
                }
            }
        }
    }
    
  public:
    int numProvinces(vector<vector<int>> adj, int V) {
        // code here
        int visited[V+1]={0};
        ans=0;
        
        for(int i=1;i<=V;i++)
        {
            if(visited[i]==0)
            {
                ans++;
                visited[i]=1;
                q.push(i);
                solve(adj,V,visited);
            }
        }
        return ans;
    }
};
