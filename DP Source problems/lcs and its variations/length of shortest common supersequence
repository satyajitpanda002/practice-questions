//question - find the length of shortest common sub sequesne
//approach : ( length of 1st string + length of 2nd string ) - length of LCS between string 1 and string 2


#include"bits/stdc++.h"
using namespace std;

int solve(string x,string y,int m,int n)
{
    int dp[m+1][n+1];
    for(int i=0;i<=n;i++)
        dp[0][i]=0;
    for(int i=0;i<=m;i++)
        dp[i][0]=0;

    for(int i=1;i<=m;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(x[i-1]==y[j-1])
                dp[i][j]=1+dp[i-1][j-1];
            else
                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        }
    }

    return ((m+n)-dp[m][n]);
}

int main()
{
    string x,y;
    cout<<"enter the two strings"<<endl;
    cin>>x>>y;
    cout<<solve(x,y,x.length(),y.length())<<endl;
    return 0;
}
