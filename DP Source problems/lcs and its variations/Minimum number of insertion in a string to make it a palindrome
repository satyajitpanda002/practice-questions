// question - Minimum number of insertion in a string to make it a palindrome
// approach -: given string length - length of LCS

#include"bits/stdc++.h"
using namespace std;

int solve(string x,string y,int m,int n)
{
    int dp[m+1][n+1];
    for(int i=0;i<=n;i++)
        dp[0][i]=0;
    for(int i=0;i<=m;i++)
        dp[i][0]=0;

    for(int i=1;i<=m;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(x[i-1]==y[j-1])
                dp[i][j]=1+dp[i-1][j-1];
            else
                dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
        }
    }
    return dp[m][n];
}

int main()
{
    string a,b;
    cout<<"enter the string"<<endl;
    cin>>a;
    b=a;
    reverse(b.begin(),b.end());

    cout<<a.length()-solve(a,b,a.length(),b.length());

    return 0;
}
