// question - printing the shortest common super sequence
// approach - slight variations from printing the LCS


#include"bits/stdc++.h"
using namespace std;

string solve(string x,string y,int m,int n)
{
    int dp[m+1][n+1];
    for(int i=00;i<=n;i++)
        dp[0][i]=0;
    for(int i=0;i<=m;i++)
        dp[i][0]=0;

    for(int i=1;i<=m;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(x[i-1]==y[j-1])
                dp[i][j]=1+dp[i-1][j-1];
            else
                dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
        }
    }

    string s;
    int i=m,j=n;

    while(i>0 && j>0)
    {
        if(x[i-1]==y[j-1])
        {
            s+=x[i-1];
            i--;
            j--;
        }
        else
        {
            if(dp[i-1][j]>dp[i][j-1])
            {
                s+=x[i-1];
                i--;
            }
            else
            {
                s+=y[j-1];
                j--;
            }
        }
    }
    while(i>0)
    {
        s+=x[i-1];
        i--;
    }
    while(j>0)
    {
        s+=y[j-1];
        j--;
    }

    reverse(s.begin(),s.end());
    return s;
}

int main()
{
    string x,y;
    cout<<"enter the two strings"<<endl;
    cin>>x>>y;

    cout<<solve(x,y,x.length(),y.length())<<endl;
    return 0;
}
