#include"bits/stdc++.h"
using namespace std;

int dp[101][101];

int solve(int wt[],int val[],int n,int w)
{
    if(n==0 || w==0)
        return 0;
    if(dp[n][w]!=-1)
        return dp[n][w];

    if(wt[n-1]<=w)
    {
        return dp[n][w]=max((val[n-1]+solve(wt,val,n-1,w-wt[n-1])),solve(wt,val,n-1,w));
    }
    else
    {
        return dp[n][w]=solve(wt,val,n-1,w);
    }
}

int main()
{
    for(int i=0;i<101;i++)
    {
        for(int j=0;j<101;j++)
            dp[i][j]=-1;
    }
    int n,w;
    cout<<"enter array size and knapsack weight"<<endl;
    cin>>n>>w;
    int wt[n],val[n];
    cout<<"enter the weight arrat"<<endl;
    for(int i=0;i<n;i++)
        cin>>wt[i];
    cout<<"enter the value array"<<endl;
    for(int i=0;i<n;i++)
        cin>>val[i];

    int r=solve(wt,val,n,w);
    cout<<r<<endl;

    return 0;
}
